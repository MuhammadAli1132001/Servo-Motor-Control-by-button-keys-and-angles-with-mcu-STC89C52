C51 COMPILER V9.60.7.0   LCD                                                               09/01/2023 18:01:57 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          // Define LCD control pins
   2          #include <reg51.h>
   3          #include "lcd.h"
   4          
   5          sbit RS = P2^6;
   6          sbit RW = P2^5;
   7          sbit EN = P2^7;
   8          
   9          sbit D0 = P0^0;
  10          sbit D1 = P0^1;
  11          sbit D2 = P0^2;
  12          sbit D3 = P0^3;
  13          sbit D4 = P0^4;
  14          sbit D5 = P0^5;
  15          sbit D6 = P0^6;
  16          sbit D7 = P0^7;
  17          
  18          //const unsigned char specialcharacter[8][8] ={
  19          // {0x00,0x0a,0x1f,0x1f,0x0e,0x04,0x00}, {0x04,0x0e,0x0e,0x0e,0x1f,0x00,0x04,0x00},{0x1f,0x15,0x1f,0x1f,0x
             -0e,0x0a,0x1b,0x00},{0x00,0x01,0x03,0x16,0x1c,0x08,0x00,0x00},
  20          // {0x01,0x03,0x0f,0x0f,0x0f,0x0f,0x03,0x01},{0x01,0x03,0x05,0x09,0x09,0x0b,0x1b,0x18},{0x00,0x0e,0x15,0x1
             -b,0x0e,0x0e,0x00,0x00},{0x0e,0x11,0x11,0x1f,0x1b,0x1b,0x1b,0x1f},
  21          //};
  22          
  23          
  24          
  25          void delay_ms(unsigned int ms) {
  26   1        unsigned int i, j;
  27   1        for (i = 0; i < ms; i++)
  28   1          for (j = 0; j < 127; j++);
  29   1      }
  30          
  31          void lcd_write_byte(unsigned char dataa, unsigned char rs) {
  32   1        
  33   1        RS = rs;
  34   1        EN = 1;
  35   1        delay_ms(10);
  36   1        
  37   1        port0 = dataa;
  38   1      //  D0 = (dataa & 0x01);
  39   1      //  D1 = (dataa & 0x02) >> 1;
  40   1      //  D2 = (dataa & 0x04) >> 2;
  41   1      //  D3 = (dataa & 0x08) >> 3;
  42   1      //  D4 = (dataa & 0x10) >> 4;
  43   1      //  D5 = (dataa & 0x20) >> 5;
  44   1      //  D6 = (dataa & 0x40) >> 6;
  45   1      //  D7 = (dataa & 0x80) >> 7;
  46   1        delay_ms(10);
  47   1        EN = 0;
  48   1      }
  49          
  50          void lcd_write_command(unsigned char command) {
  51   1        RW = 0;
  52   1        lcd_write_byte(command, 0);
C51 COMPILER V9.60.7.0   LCD                                                               09/01/2023 18:01:57 PAGE 2   

  53   1      }
  54          
  55          void lcd_write_data(unsigned char dataa) {
  56   1        RW = 0;
  57   1        lcd_write_byte(dataa, 1);
  58   1      }
  59          
  60          void lcd_clear(void) {
  61   1        lcd_write_command(LCD_CLEAR_DISPLAY);
  62   1      }
  63          
  64          void lcd_init(void) {
  65   1      //  unsigned char i;
  66   1        lcd_write_command(LCD_FUNCTION_SET);
  67   1          delay_ms(20);
  68   1      
  69   1        lcd_write_command(LCD_DISPLAY_ON);
  70   1          delay_ms(20);
  71   1        
  72   1        lcd_write_command(LCD_FUNCTION_SET_8BIT);
  73   1          delay_ms(20);
  74   1      
  75   1        lcd_write_command(LCD_FUNCTION_SET_2LINE );
  76   1          delay_ms(20);
  77   1      
  78   1        lcd_write_command(LCD_FUNCTION_SET_5X8DOTS);
  79   1          delay_ms(20);
  80   1      
  81   1        lcd_write_command(LCD_DISPLAY_ON_OFF_CONTROL);
  82   1          delay_ms(20);
  83   1        
  84   1         lcd_clear();
  85   1          delay_ms(20);
  86   1        
  87   1        
  88   1      //  for (i = 0; i <8; i++) {
  89   1      //    lcd_write_symbol(i, specialcharacter[i]);
  90   1      //  }
  91   1                                                                                   // Entry mode set
  92   1        lcd_write_command(LCD_ENTRY_MODE_SET);
  93   1        //lcd_write_command(LCD_ENTRY_MODE_SET_INCREMENT);
  94   1      
  95   1      
  96   1      }
  97          
  98          void lcd_set_cursor(unsigned char row, unsigned char col) {
  99   1        
 100   1        unsigned char address;
 101   1        if (row == 0) {
 102   2          address = LCD_SET_DDRAM_ADDRESS | col;
 103   2        } else {
 104   2          address = LCD_SET_DDRAM_ADDRESS | (0x40 + col);
 105   2        }
 106   1        lcd_write_command(address);
 107   1      }
 108          
 109          
 110          
 111          
 112          void lcd_write_string(char *str) {
 113   1        unsigned int i = 0;
 114   1        while (str[i] != '\0') {
C51 COMPILER V9.60.7.0   LCD                                                               09/01/2023 18:01:57 PAGE 3   

 115   2          lcd_write_data(str[i]);
 116   2          i++;
 117   2        }
 118   1      }
 119          
 120          //void lcd_write_symbol(unsigned char location, const unsigned char* scharacter){
 121          //  unsigned char j;
 122          //  lcd_write_command(LCD_SET_CGRAM_ADDRESS | (location <<3));
 123          //  
 124          //    for (j = 0; j<8; j++){
 125          //    lcd_write_data(scharacter[j]);
 126          //    }
 127          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    184    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
